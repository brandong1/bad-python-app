{
  "version": "1.139.0",
  "results": [
    {
      "check_id": "python.flask.security.audit.render-template-string.render-template-string",
      "path": "middlewares.py",
      "start": {
        "line": 16,
        "col": 20,
        "offset": 442
      },
      "end": {
        "line": 16,
        "col": 62,
        "offset": 484
      },
      "extra": {
        "metavars": {},
        "message": "Found a template created with string formatting. This is susceptible to server-side template injection and cross-site scripting attacks.",
        "metadata": {
          "cwe": [
            "CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')"
          ],
          "owasp": [
            "A03:2021 - Injection"
          ],
          "references": [
            "https://nvisium.com/blog/2016/03/09/exploring-ssti-in-flask-jinja2.html"
          ],
          "category": "security",
          "technology": [
            "flask"
          ],
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Code Injection"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.audit.render-template-string.render-template-string",
          "shortlink": "https://sg.run/8yjE",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9540,
              "rule_id": "5rUOv1",
              "rv_id": 946214,
              "url": "https://semgrep.dev/playground/r/GxTP7pA/python.flask.security.audit.render-template-string.render-template-string",
              "version_id": "GxTP7pA"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "8d16db99cfd1cf6d05211b8758f6ec2be910bb97bbbc4bb357bbcf27b17836c9b2804ec8ddd2be24eaaa12742ea93fa0d195cb817013578a078b8e9c381ea576_0",
        "lines": "            return render_template_string('no api key found'), 401",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "templates/file_upload.html",
      "start": {
        "line": 5,
        "col": 1,
        "offset": 73
      },
      "end": {
        "line": 9,
        "col": 8,
        "offset": 280
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 5,
              "offset": 4
            },
            "abstract_content": "post"
          },
          "$METHOD": {
            "start": {
              "line": 5,
              "col": 36,
              "offset": 108
            },
            "end": {
              "line": 5,
              "col": 40,
              "offset": 112
            },
            "abstract_content": "post"
          }
        },
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": [
            "https://docs.djangoproject.com/en/4.2/howto/csrf/"
          ],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": [
            "audit"
          ],
          "technology": [
            "django"
          ],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site Request Forgery (CSRF)"
          ],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 73471,
              "rule_id": "PeUyYG",
              "rv_id": 946160,
              "url": "https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token",
              "version_id": "BjT1NRl"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "f6f018e1bcb0e7d19ae2c432fa9aa4015e1f936af12a6205b9b6ff69b01e58508eb12992fc137df3e865797a008d9f3e3926f8d0c4929143446d9b6d87dc4967_0",
        "lines": "<form action=\"file-upload\" method=\"post\" enctype=multipart/form-data>\n  <input class=\"input\" type=\"file\" name=\"file\" id=\"file\">\n  <br />\n  <input class=\"button is-primary\" type=\"submit\" value=\"Send\">\n</form>",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "templates/idor/idor_login.html",
      "start": {
        "line": 15,
        "col": 5,
        "offset": 243
      },
      "end": {
        "line": 34,
        "col": 12,
        "offset": 927
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 5,
              "offset": 4
            },
            "abstract_content": "post"
          },
          "$METHOD": {
            "start": {
              "line": 15,
              "col": 40,
              "offset": 278
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 282
            },
            "abstract_content": "post"
          }
        },
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": [
            "https://docs.djangoproject.com/en/4.2/howto/csrf/"
          ],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": [
            "audit"
          ],
          "technology": [
            "django"
          ],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site Request Forgery (CSRF)"
          ],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 73471,
              "rule_id": "PeUyYG",
              "rv_id": 946160,
              "url": "https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token",
              "version_id": "BjT1NRl"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "dae0b43ed5dbd5ec5fe1a28d531e74b06f453a89e34de9ebd095160585911a86026baeaccf39e7c4320bb0cbfceb0bbd3d331309a4f015980d9f45dd97976bdf_0",
        "lines": "    <form action=\"/idor/login\" method=\"post\" style=\"max-width: 300px;\">\n      <div class=\"field\">\n        <label class=\"label\">Username</label>\n        <div class=\"control\">\n          <input class=\"input\" name=\"username\" type=\"text\" placeholder=\"myuser\" required>\n        </div>\n      </div>\n      <div class=\"field\">\n        <label class=\"label\">Password</label>\n        <div class=\"control\">\n          <input class=\"input\" name=\"password\" type=\"password\" placeholder=\"********\" required>\n        </div>\n      </div>\n      \n      <div class=\"field is-grouped\">\n        <div class=\"control\">\n          <button class=\"button is-link\">Signin</button>\n        </div>\n      </div>\n    </form>",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "templates/ssrf.html",
      "start": {
        "line": 9,
        "col": 5,
        "offset": 131
      },
      "end": {
        "line": 14,
        "col": 12,
        "offset": 557
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 5,
              "offset": 4
            },
            "abstract_content": "post"
          },
          "$METHOD": {
            "start": {
              "line": 9,
              "col": 34,
              "offset": 160
            },
            "end": {
              "line": 9,
              "col": 38,
              "offset": 164
            },
            "abstract_content": "post"
          }
        },
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": [
            "https://docs.djangoproject.com/en/4.2/howto/csrf/"
          ],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": [
            "audit"
          ],
          "technology": [
            "django"
          ],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site Request Forgery (CSRF)"
          ],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 73471,
              "rule_id": "PeUyYG",
              "rv_id": 946160,
              "url": "https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token",
              "version_id": "BjT1NRl"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "742db642d957c365b0be0cd40da84d307ea920d6e992c46820625d3512f1ecfde6ac63f899abc06f24b0c18bb4c9a88a027092e3a12e3ead68b75f885344fc2c_0",
        "lines": "    <form action=\"/ssrf\" method=\"post\" style=\"max-width: 400px;\">\n      <input class=\"input\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"E-mail\" required>\n      <input class=\"input\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"name\" required>\n      <input class=\"input\" type=\"url\" name=\"imageUrl\" id=\"imageUrl\" placeholder=\"Profile Picture Url\" required>\n      <input class=\"button\" type=\"submit\" value=\"Send\">\n    </form>",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
      "path": "templates/xss-reflected.html",
      "start": {
        "line": 13,
        "col": 7,
        "offset": 200
      },
      "end": {
        "line": 13,
        "col": 29,
        "offset": 222
      },
      "extra": {
        "metavars": {},
        "message": "Detected a segment of a Flask template where autoescaping is explicitly disabled with '{% autoescape off %}'. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability, or turn autoescape on.",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://flask.palletsprojects.com/en/1.1.x/templating/#controlling-autoescaping",
            "https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup"
          ],
          "category": "security",
          "technology": [
            "flask"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site-Scripting (XSS)"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
          "shortlink": "https://sg.run/Bkn2",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9551,
              "rule_id": "YGURo6",
              "rv_id": 946239,
              "url": "https://semgrep.dev/playground/r/w8TKJ7y/python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
              "version_id": "w8TKJ7y"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "7285773424d0785fc267a9b2158c577717195cd0a7cb95b0b9eca58b57193281d6bd726d5ee38e408661b41123b6e2d76c314e54fd5fc8b8b319c80ac299b4b9_0",
        "lines": "      {% autoescape false %}",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "templates/xss-stored.html",
      "start": {
        "line": 10,
        "col": 3,
        "offset": 180
      },
      "end": {
        "line": 22,
        "col": 10,
        "offset": 641
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 5,
              "offset": 4
            },
            "abstract_content": "post"
          },
          "$METHOD": {
            "start": {
              "line": 10,
              "col": 38,
              "offset": 215
            },
            "end": {
              "line": 10,
              "col": 42,
              "offset": 219
            },
            "abstract_content": "post"
          }
        },
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": [
            "https://docs.djangoproject.com/en/4.2/howto/csrf/"
          ],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": [
            "audit"
          ],
          "technology": [
            "django"
          ],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site Request Forgery (CSRF)"
          ],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 73471,
              "rule_id": "PeUyYG",
              "rv_id": 946160,
              "url": "https://semgrep.dev/playground/r/BjT1NRl/python.django.security.django-no-csrf-token.django-no-csrf-token",
              "version_id": "BjT1NRl"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "d3dc99db2e8483d6a45de36bfc3b120cc245fb513eeeba24e13cbfdd68d6a2627a63529d5a83978f94f64ff5758293e89d1ff3c08bb94bd84cd3e75e27c53621_0",
        "lines": "  <form action=\"/xss/stored\" method=\"post\">\n    <div class=\"field\">\n        <label class=\"label\">Name</label>\n        <div class=\"control\">\n          <input class=\"input\" type=\"text\" placeholder=\"Text input\" id=\"message\" name=\"message\" required minlength=\"3\">\n        </div>\n      </div>\n      <div class=\"field is-grouped\">\n        <div class=\"control\">\n          <button class=\"button is-link\" type=\"submit\">Submit</button>\n        </div>\n      </div>\n  </form>",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
      "path": "templates/xss-stored.html",
      "start": {
        "line": 29,
        "col": 5,
        "offset": 736
      },
      "end": {
        "line": 29,
        "col": 27,
        "offset": 758
      },
      "extra": {
        "metavars": {},
        "message": "Detected a segment of a Flask template where autoescaping is explicitly disabled with '{% autoescape off %}'. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability, or turn autoescape on.",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://flask.palletsprojects.com/en/1.1.x/templating/#controlling-autoescaping",
            "https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup"
          ],
          "category": "security",
          "technology": [
            "flask"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site-Scripting (XSS)"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
          "shortlink": "https://sg.run/Bkn2",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9551,
              "rule_id": "YGURo6",
              "rv_id": 946239,
              "url": "https://semgrep.dev/playground/r/w8TKJ7y/python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
              "version_id": "w8TKJ7y"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "9c5d561051644015507dbe61b2e887938525964491d0d44a4d6d6dc777aa3889c5bbfaeca91cec1f588874ac9e6d7ed434d32770a35e3d784d5eff19dbadc97d_0",
        "lines": "    {% autoescape false %}",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.injection.subprocess-injection.subprocess-injection",
      "path": "vuln-1.py",
      "start": {
        "line": 15,
        "col": 18,
        "offset": 318
      },
      "end": {
        "line": 21,
        "col": 10,
        "offset": 508
      },
      "extra": {
        "metavars": {
          "$APP": {
            "start": {
              "line": 6,
              "col": 7,
              "offset": 61
            },
            "end": {
              "line": 6,
              "col": 28,
              "offset": 82
            },
            "abstract_content": "flask.Flask(__name__)"
          },
          "$ROUTE": {
            "start": {
              "line": 9,
              "col": 12,
              "offset": 96
            },
            "end": {
              "line": 9,
              "col": 40,
              "offset": 124
            },
            "abstract_content": "\"/route_param/<route_param>\""
          },
          "$FUNC": {
            "start": {
              "line": 10,
              "col": 5,
              "offset": 130
            },
            "end": {
              "line": 10,
              "col": 16,
              "offset": 141
            },
            "abstract_content": "route_param"
          },
          "$ROUTEVAR": {
            "start": {
              "line": 10,
              "col": 17,
              "offset": 142
            },
            "end": {
              "line": 10,
              "col": 28,
              "offset": 153
            },
            "abstract_content": "route_param"
          }
        },
        "message": "Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.",
        "metadata": {
          "category": "security",
          "technology": [
            "flask"
          ],
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "references": [
            "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
          ],
          "confidence": "HIGH",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Command Injection"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.injection.subprocess-injection.subprocess-injection",
          "shortlink": "https://sg.run/5gW3",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 31147,
              "rule_id": "8GU3qp",
              "rv_id": 946227,
              "url": "https://semgrep.dev/playground/r/zyTlk7Y/python.flask.security.injection.subprocess-injection.subprocess-injection",
              "version_id": "zyTlk7Y"
            }
          }
        },
        "severity": "ERROR",
        "fingerprint": "cb76f8870fe17757903a5eae2512b23d80d8d0a17e07970f09eca8dac6b7a32b4eaa7ab76f7f964427f96a876bc83e4449a67478447d7fc97105484625055938_0",
        "lines": "        result = subprocess.run(\n            [route_param],  # Pass as list, not through shell\n            capture_output=True,\n            text=True,\n            timeout=5,\n            check=False\n        )",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "dataflow_trace": {
          "taint_source": [
            "CliLoc",
            [
              {
                "path": "vuln-1.py",
                "start": {
                  "line": 10,
                  "col": 17,
                  "offset": 142
                },
                "end": {
                  "line": 10,
                  "col": 28,
                  "offset": 153
                }
              },
              "route_param"
            ]
          ],
          "intermediate_vars": [
            {
              "location": {
                "path": "vuln-1.py",
                "start": {
                  "line": 10,
                  "col": 17,
                  "offset": 142
                },
                "end": {
                  "line": 10,
                  "col": 28,
                  "offset": 153
                }
              },
              "content": "route_param"
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "path": "vuln-1.py",
                "start": {
                  "line": 15,
                  "col": 18,
                  "offset": 318
                },
                "end": {
                  "line": 21,
                  "col": 10,
                  "offset": 508
                }
              },
              "subprocess.run(\n            [route_param],  # Pass as list, not through shell\n            capture_output=True,\n            text=True,\n            timeout=5,\n            check=False\n        )"
            ]
          ]
        },
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
      "path": "vuln-1.py",
      "start": {
        "line": 16,
        "col": 13,
        "offset": 346
      },
      "end": {
        "line": 16,
        "col": 26,
        "offset": 359
      },
      "extra": {
        "metavars": {
          "$APP": {
            "start": {
              "line": 6,
              "col": 7,
              "offset": 61
            },
            "end": {
              "line": 6,
              "col": 28,
              "offset": 82
            },
            "abstract_content": "flask.Flask(__name__)"
          },
          "$FUNC": {
            "start": {
              "line": 10,
              "col": 5,
              "offset": 130
            },
            "end": {
              "line": 10,
              "col": 16,
              "offset": 141
            },
            "abstract_content": "route_param"
          },
          "$ROUTEVAR": {
            "start": {
              "line": 10,
              "col": 17,
              "offset": 142
            },
            "end": {
              "line": 10,
              "col": 28,
              "offset": 153
            },
            "abstract_content": "route_param"
          },
          "$CMD": {
            "start": {
              "line": 16,
              "col": 13,
              "offset": 346
            },
            "end": {
              "line": 16,
              "col": 26,
              "offset": 359
            },
            "abstract_content": "[route_param]"
          }
        },
        "message": "Detected subprocess function 'route_param' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.",
        "metadata": {
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "asvs": {
            "control_id": "5.3.8 OS Command Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
            "https://docs.python.org/3/library/subprocess.html",
            "https://docs.python.org/3/library/shlex.html",
            "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
          ],
          "category": "security",
          "technology": [
            "python"
          ],
          "confidence": "MEDIUM",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "MEDIUM",
          "impact": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Command Injection"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
          "shortlink": "https://sg.run/NWxp",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 27271,
              "rule_id": "JDUz3R",
              "rv_id": 946391,
              "url": "https://semgrep.dev/playground/r/9lTy1bg/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
              "version_id": "9lTy1bg"
            }
          }
        },
        "severity": "ERROR",
        "fingerprint": "762da8a5d52e6a154fcdcfb61f4f52e116cfe1ab441375c481b314ca0806db9d9c2c753604fc26098e1caaa80e8dc7d53289f1b709a292569e6df8a9adc02193_0",
        "lines": "            [route_param],  # Pass as list, not through shell",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "dataflow_trace": {
          "taint_source": [
            "CliLoc",
            [
              {
                "path": "vuln-1.py",
                "start": {
                  "line": 10,
                  "col": 17,
                  "offset": 142
                },
                "end": {
                  "line": 10,
                  "col": 28,
                  "offset": 153
                }
              },
              "route_param"
            ]
          ],
          "intermediate_vars": [
            {
              "location": {
                "path": "vuln-1.py",
                "start": {
                  "line": 10,
                  "col": 17,
                  "offset": 142
                },
                "end": {
                  "line": 10,
                  "col": 28,
                  "offset": 153
                }
              },
              "content": "route_param"
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "path": "vuln-1.py",
                "start": {
                  "line": 16,
                  "col": 13,
                  "offset": 346
                },
                "end": {
                  "line": 16,
                  "col": 26,
                  "offset": 359
                }
              },
              "[route_param]"
            ]
          ]
        },
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.audit.directly-returned-format-string.directly-returned-format-string",
      "path": "vuln-1.py",
      "start": {
        "line": 22,
        "col": 9,
        "offset": 517
      },
      "end": {
        "line": 22,
        "col": 42,
        "offset": 550
      },
      "extra": {
        "metavars": {
          "$APP": {
            "start": {
              "line": 9,
              "col": 2,
              "offset": 86
            },
            "end": {
              "line": 9,
              "col": 5,
              "offset": 89
            },
            "abstract_content": "app",
            "propagated_value": {
              "svalue_start": {
                "line": 6,
                "col": 7,
                "offset": 61
              },
              "svalue_end": {
                "line": 6,
                "col": 28,
                "offset": 82
              },
              "svalue_abstract_content": "flask.Flask(__name__)"
            }
          },
          "$FUNC": {
            "start": {
              "line": 10,
              "col": 5,
              "offset": 130
            },
            "end": {
              "line": 10,
              "col": 16,
              "offset": 141
            },
            "abstract_content": "route_param"
          },
          "$PARAM": {
            "start": {
              "line": 16,
              "col": 14,
              "offset": 347
            },
            "end": {
              "line": 16,
              "col": 25,
              "offset": 358
            },
            "abstract_content": "route_param"
          }
        },
        "message": "Detected Flask route directly returning a formatted string. This is subject to cross-site scripting if user input can reach the string. Consider using the template engine instead and rendering pages with 'render_template()'.",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": [
            "flask"
          ],
          "references": [
            "https://owasp.org/Top10/A03_2021-Injection"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cross-Site-Scripting (XSS)"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.audit.directly-returned-format-string.directly-returned-format-string",
          "shortlink": "https://sg.run/Zv6o",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9535,
              "rule_id": "QrUz49",
              "rv_id": 946207,
              "url": "https://semgrep.dev/playground/r/gETe1NK/python.flask.security.audit.directly-returned-format-string.directly-returned-format-string",
              "version_id": "gETe1NK"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "bf4e16bb714a513a88ff153cb28e86d87aa0b0aa7b5f55a6a3441c0fd0a1114acae28a1e43c4a67feda7440cb3bb7ccfd989f974745fc590de4fff044c49c3d8_0",
        "lines": "        return f\"Output: {result.stdout}\"",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "dataflow_trace": {
          "taint_source": [
            "CliLoc",
            [
              {
                "path": "vuln-1.py",
                "start": {
                  "line": 16,
                  "col": 14,
                  "offset": 347
                },
                "end": {
                  "line": 16,
                  "col": 25,
                  "offset": 358
                }
              },
              "route_param"
            ]
          ],
          "intermediate_vars": [
            {
              "location": {
                "path": "vuln-1.py",
                "start": {
                  "line": 15,
                  "col": 9,
                  "offset": 309
                },
                "end": {
                  "line": 15,
                  "col": 15,
                  "offset": 315
                }
              },
              "content": "result"
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "path": "vuln-1.py",
                "start": {
                  "line": 22,
                  "col": 9,
                  "offset": 517
                },
                "end": {
                  "line": 22,
                  "col": 42,
                  "offset": 550
                }
              },
              "return f\"Output: {result.stdout}\""
            ]
          ]
        },
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-10.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "10e2a8beddf242b3f9dbdaf314e508885f6516bf9534dbb0ad1c24429e1c7ea91bda710083b4e761816dc6b72a59a5e6a52f6585251eeb8c89217191a3414a67_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-10.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm Algorithm Algorithm Algorithm Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "9a50c82c63bdd5e15ef3faf27b9eb4e712ee34b8007367f59ba39a6bafb25756c880e07c28ed6465bf37e75b4b62a43ed54b8c9668d28783f1900e2a3f082c8a_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-2.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "83ec3459a93a6acf94b6e26b7d8efea6888140be8f2a70c116a73ad82598856a1fa8ee089ca78f867d6f8df47c57911d50a3041859a0cacbf10782f5a2aaf6b4_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-2.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "3ca900ac361ef2a5c141d58c3a6720f54730e2c933c9f8a74cb6cf0800f18db6669ef132959dfa1c93d08c531c5ab054fd9108a0bc21bcd956d2cc2caa33970a_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-3.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "2cf143c0ddff8644dc1ad81a8e1aa235ebaea30b11b95987ad7a3f8f19dd8c2b076a20ce2f1c712c119a532cfd4cbd7983bf4413ec4d3af0804019d16ed96d3b_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-3.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "05f7140d503ddd96ce86146866e8e75a68450389111d97583e1e06c6a6674575b6eb373d23ad7445f6405eaf2a87816020a3f7622a2afaf15ae45e93a04442bc_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-4.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "a44487c90ae21d00daf8dbf97721ce33ab4f4c55722d2e825951dc19e05938166f95b43abefe643a8531a5cee3ec4b63a8ef18a0fb8109dd34ec0b594104d6e5_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-4.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm Algorithm Algorithm Algorithm Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "85d3769c4624c5aa07ddae3de90af5aa80b6b52e9ecac14a3c2ad8558e6b43c6fcf726b1930af578b8d87d208251c3e964c24b08004c5718e9a4f2f3956ef00d_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-7.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm Algorithm Algorithm Algorithm Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "30def93232cb6b3d369728f2915c749f0baeafbd729439e0b9ee48e00041f69e212f5b0caef8a4d315947c1c7f92493d241b90cd14e11bac16e9b9e20a1ba0c4_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-7.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "28549615c58ab261ae3ecb0f5e4485db5e0589fc6c8cf9e3b0dafd5a5e11657aba118f0c8d42bc3ed96545218f160e17e29438751becf4d33620d4b8730f0e72_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-9.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "31902f86cca4eb228ba34ae2ecc3c1a6db61c620b7ef5c91af1f27e771362882749651164c486c78546f50a4e1b48cc6d5a06d0c95855e41381b486b78bf0c0f_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main-9.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "7bd231e2220b39176656f70231d263292a3676160235110b976232452828535bbd294b05979bf8023a86dc716dd3aab07a7929cb76db8df91d6a4fd83587935b_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main.java",
      "start": {
        "line": 15,
        "col": 54,
        "offset": 361
      },
      "end": {
        "line": 15,
        "col": 60,
        "offset": 367
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$ALG": {
            "start": {
              "line": 15,
              "col": 23,
              "offset": 330
            },
            "end": {
              "line": 15,
              "col": 32,
              "offset": 339
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 15,
              "col": 35,
              "offset": 342
            },
            "end": {
              "line": 15,
              "col": 44,
              "offset": 351
            },
            "abstract_content": "Algorithm Algorithm Algorithm Algorithm Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 15,
              "col": 45,
              "offset": 352
            },
            "end": {
              "line": 15,
              "col": 52,
              "offset": 359
            },
            "abstract_content": "HMAC256"
          },
          "$Y": {
            "start": {
              "line": 15,
              "col": 54,
              "offset": 361
            },
            "end": {
              "line": 15,
              "col": 60,
              "offset": 367
            },
            "abstract_content": "secret"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "29ac88ba1a43950c0612827e1a6394e82cd7ba68791d98da73ba7174b3eab83fad4f37e6eace5aaff302a7f9e911a4936ecf690aaaf778af5661dab564cfeeca_0",
        "lines": "            Algorithm algorithm = Algorithm.HMAC256(\"secret\");",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
      "path": "vuln-main.java",
      "start": {
        "line": 46,
        "col": 29,
        "offset": 1225
      },
      "end": {
        "line": 46,
        "col": 35,
        "offset": 1231
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 8,
              "offset": 7
            },
            "abstract_content": "HMAC256"
          },
          "$CLASS": {
            "start": {
              "line": 43,
              "col": 16,
              "offset": 1153
            },
            "end": {
              "line": 43,
              "col": 20,
              "offset": 1157
            },
            "abstract_content": "App2"
          },
          "$TYPE": {
            "start": {
              "line": 46,
              "col": 12,
              "offset": 1208
            },
            "end": {
              "line": 46,
              "col": 18,
              "offset": 1214
            },
            "abstract_content": "String"
          },
          "$SECRET": {
            "start": {
              "line": 46,
              "col": 19,
              "offset": 1215
            },
            "end": {
              "line": 46,
              "col": 25,
              "offset": 1221
            },
            "abstract_content": "secret"
          },
          "$Y": {
            "start": {
              "line": 46,
              "col": 29,
              "offset": 1225
            },
            "end": {
              "line": 46,
              "col": 35,
              "offset": 1231
            },
            "abstract_content": "secret"
          },
          "$RETURNTYPE": {
            "start": {
              "line": 48,
              "col": 12,
              "offset": 1246
            },
            "end": {
              "line": 48,
              "col": 16,
              "offset": 1250
            },
            "abstract_content": "void"
          },
          "$FUNC": {
            "start": {
              "line": 48,
              "col": 17,
              "offset": 1251
            },
            "end": {
              "line": 48,
              "col": 21,
              "offset": 1255
            },
            "abstract_content": "bad2"
          },
          "$ALG": {
            "start": {
              "line": 50,
              "col": 23,
              "offset": 1296
            },
            "end": {
              "line": 50,
              "col": 32,
              "offset": 1305
            },
            "abstract_content": "algorithm"
          },
          "$ALGO": {
            "start": {
              "line": 50,
              "col": 35,
              "offset": 1308
            },
            "end": {
              "line": 50,
              "col": 44,
              "offset": 1317
            },
            "abstract_content": "Algorithm Algorithm Algorithm Algorithm Algorithm"
          },
          "$HMAC": {
            "start": {
              "line": 50,
              "col": 45,
              "offset": 1318
            },
            "end": {
              "line": 50,
              "col": 52,
              "offset": 1325
            },
            "abstract_content": "HMAC256"
          }
        },
        "message": "A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module).",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html"
          ],
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "technology": [
            "java",
            "secrets",
            "jwt"
          ],
          "category": "security",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
          "shortlink": "https://sg.run/RoDK",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9149,
              "rule_id": "oqUeAn",
              "rv_id": 945633,
              "url": "https://semgrep.dev/playground/r/w8TKJyr/java.java-jwt.security.jwt-hardcode.java-jwt-hardcoded-secret",
              "version_id": "w8TKJyr"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "26cd1ed5d4a4f807c010160f66205a1c5118617c903a7aeceb63022450acec72d5b91228d4b889e1386b9d706b4e080c1ecac105c11072d8ad06b0f115da1729_0",
        "lines": "    static String secret = \"secret\";",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.dangerous-system-call.dangerous-system-call",
      "path": "vulns/file_upload/file_upload.py",
      "start": {
        "line": 31,
        "col": 5,
        "offset": 775
      },
      "end": {
        "line": 31,
        "col": 65,
        "offset": 835
      },
      "extra": {
        "metavars": {
          "$FUNC": {
            "start": {
              "line": 14,
              "col": 5,
              "offset": 252
            },
            "end": {
              "line": 14,
              "col": 20,
              "offset": 267
            },
            "abstract_content": "file_upload_api"
          },
          "$PROPERTY": {
            "start": {
              "line": 15,
              "col": 20,
              "offset": 302
            },
            "end": {
              "line": 15,
              "col": 25,
              "offset": 307
            },
            "abstract_content": "files"
          }
        },
        "message": "Found user-controlled data used in a system call. This could allow a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability.",
        "metadata": {
          "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b605_start_process_with_a_shell.html",
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "references": [
            "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
          ],
          "asvs": {
            "control_id": "5.2.4 Dyanmic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": [
            "python"
          ],
          "confidence": "MEDIUM",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Command Injection"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.dangerous-system-call.dangerous-system-call",
          "shortlink": "https://sg.run/k0W7",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 27272,
              "rule_id": "5rUoP1",
              "rv_id": 946392,
              "url": "https://semgrep.dev/playground/r/yeT0np6/python.lang.security.dangerous-system-call.dangerous-system-call",
              "version_id": "yeT0np6"
            }
          }
        },
        "severity": "ERROR",
        "fingerprint": "c639749bbe3b7ec6cd8cd70f2433a0e4b485e6abbc7e9628b58a033c6e514b9434f47fcd4318e37212c1ccdc4864a4cb656df07abefa81f2cf4fe3841acb54c6_0",
        "lines": "    os.system(f'mv {saved_file_path} {public_upload_file_path}')",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "dataflow_trace": {
          "taint_source": [
            "CliLoc",
            [
              {
                "path": "vulns/file_upload/file_upload.py",
                "start": {
                  "line": 15,
                  "col": 12,
                  "offset": 294
                },
                "end": {
                  "line": 15,
                  "col": 33,
                  "offset": 315
                }
              },
              "request.files['file']"
            ]
          ],
          "intermediate_vars": [
            {
              "location": {
                "path": "vulns/file_upload/file_upload.py",
                "start": {
                  "line": 15,
                  "col": 5,
                  "offset": 287
                },
                "end": {
                  "line": 15,
                  "col": 9,
                  "offset": 291
                }
              },
              "content": "file"
            },
            {
              "location": {
                "path": "vulns/file_upload/file_upload.py",
                "start": {
                  "line": 24,
                  "col": 5,
                  "offset": 530
                },
                "end": {
                  "line": 24,
                  "col": 22,
                  "offset": 547
                }
              },
              "content": "saved_file_result"
            },
            {
              "location": {
                "path": "vulns/file_upload/file_upload.py",
                "start": {
                  "line": 25,
                  "col": 5,
                  "offset": 581
                },
                "end": {
                  "line": 25,
                  "col": 20,
                  "offset": 596
                }
              },
              "content": "saved_file_path"
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "path": "vulns/file_upload/file_upload.py",
                "start": {
                  "line": 31,
                  "col": 5,
                  "offset": 775
                },
                "end": {
                  "line": 31,
                  "col": 65,
                  "offset": 835
                }
              },
              "os.system(f'mv {saved_file_path} {public_upload_file_path}')"
            ]
          ]
        },
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.audit.md5-used-as-password.md5-used-as-password",
      "path": "vulns/idor/idor.py",
      "start": {
        "line": 14,
        "col": 16,
        "offset": 319
      },
      "end": {
        "line": 14,
        "col": 65,
        "offset": 368
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 48,
              "offset": 47
            },
            "abstract_content": "hashlib.md5(password.encode('utf-8')).hexdigest"
          },
          "$FUNCTION": {
            "start": {
              "line": 14,
              "col": 16,
              "offset": 319
            },
            "end": {
              "line": 14,
              "col": 63,
              "offset": 366
            },
            "abstract_content": "hashlib.md5(password.encode('utf-8')).hexdigest"
          }
        },
        "message": "It looks like MD5 is used as a password hash. MD5 is not considered a secure password hash because it can be cracked by an attacker in a short amount of time. Use a suitable password hashing function such as scrypt. You can use `hashlib.scrypt`.",
        "metadata": {
          "cwe": [
            "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
          ],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "references": [
            "https://tools.ietf.org/html/rfc6151",
            "https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision",
            "https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html",
            "https://security.stackexchange.com/questions/211/how-to-securely-hash-passwords",
            "https://github.com/returntocorp/semgrep-rules/issues/1609",
            "https://docs.python.org/3/library/hashlib.html#hashlib.scrypt"
          ],
          "category": "security",
          "technology": [
            "pycryptodome",
            "hashlib",
            "md5"
          ],
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Cryptographic Issues"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.audit.md5-used-as-password.md5-used-as-password",
          "shortlink": "https://sg.run/5DwD",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14703,
              "rule_id": "6JU1w1",
              "rv_id": 946368,
              "url": "https://semgrep.dev/playground/r/l4Tx9Rp/python.lang.security.audit.md5-used-as-password.md5-used-as-password",
              "version_id": "l4Tx9Rp"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "6985c5e8c552cd39519d4fc5ba5575b1473fb7a60861ad1492e511cf5a485c2a199b4819829a841f5a53dc53cbd6d6463a6b29f6dfa6d405d570d1a7cfc0e774_0",
        "lines": "    password = hashlib.md5(password.encode('utf-8')).hexdigest()",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "dataflow_trace": {
          "taint_source": [
            "CliLoc",
            [
              {
                "path": "vulns/idor/idor.py",
                "start": {
                  "line": 14,
                  "col": 16,
                  "offset": 319
                },
                "end": {
                  "line": 14,
                  "col": 27,
                  "offset": 330
                }
              },
              "hashlib.md5"
            ]
          ],
          "intermediate_vars": [],
          "taint_sink": [
            "CliLoc",
            [
              {
                "path": "vulns/idor/idor.py",
                "start": {
                  "line": 14,
                  "col": 16,
                  "offset": 319
                },
                "end": {
                  "line": 14,
                  "col": 65,
                  "offset": 368
                }
              },
              "hashlib.md5(password.encode('utf-8')).hexdigest()"
            ]
          ]
        },
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.injection.tainted-sql-string.tainted-sql-string",
      "path": "vulns/sql_injection/sql_injection_search.py",
      "start": {
        "line": 7,
        "col": 11,
        "offset": 127
      },
      "end": {
        "line": 7,
        "col": 65,
        "offset": 181
      },
      "extra": {
        "metavars": {
          "$1": {
            "start": {
              "line": 1,
              "col": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "col": 7,
              "offset": 6
            },
            "abstract_content": "SELECT"
          },
          "$ANYTHING": {
            "start": {
              "line": 5,
              "col": 22,
              "offset": 102
            },
            "end": {
              "line": 5,
              "col": 26,
              "offset": 106
            },
            "abstract_content": "args"
          },
          "$SQLSTR": {
            "start": {
              "line": 7,
              "col": 13,
              "offset": 129
            },
            "end": {
              "line": 7,
              "col": 54,
              "offset": 170
            },
            "abstract_content": "SELECT * FROM products WHERE name LIKE '%"
          }
        },
        "message": "Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using the Django object-relational mappers (ORM) instead of raw SQL queries.",
        "metadata": {
          "cwe": [
            "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          ],
          "owasp": [
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "references": [
            "https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection"
          ],
          "category": "security",
          "technology": [
            "django"
          ],
          "subcategory": [
            "audit"
          ],
          "impact": "LOW",
          "likelihood": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Mass Assignment"
          ],
          "source": "https://semgrep.dev/r/python.django.security.injection.tainted-sql-string.tainted-sql-string",
          "shortlink": "https://sg.run/PbZp",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 14701,
              "rule_id": "lBU8Ad",
              "rv_id": 946190,
              "url": "https://semgrep.dev/playground/r/yeT0nKx/python.django.security.injection.tainted-sql-string.tainted-sql-string",
              "version_id": "yeT0nKx"
            }
          }
        },
        "severity": "ERROR",
        "fingerprint": "597289d930e680e4ce0ce42bd3ec61274c92ee8439b30c97a7abcd44b9b87c2ee7bd65e1a8619cefa018b6156575bbcc81831ea8c802baf48d76ab4a25e02007_0",
        "lines": "    sql = f\"SELECT * FROM products WHERE name LIKE '%{search}%'\"",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "dataflow_trace": {
          "taint_source": [
            "CliLoc",
            [
              {
                "path": "vulns/sql_injection/sql_injection_search.py",
                "start": {
                  "line": 5,
                  "col": 14,
                  "offset": 94
                },
                "end": {
                  "line": 5,
                  "col": 26,
                  "offset": 106
                }
              },
              "request.args"
            ]
          ],
          "intermediate_vars": [
            {
              "location": {
                "path": "vulns/sql_injection/sql_injection_search.py",
                "start": {
                  "line": 5,
                  "col": 5,
                  "offset": 85
                },
                "end": {
                  "line": 5,
                  "col": 11,
                  "offset": 91
                }
              },
              "content": "search"
            }
          ],
          "taint_sink": [
            "CliLoc",
            [
              {
                "path": "vulns/sql_injection/sql_injection_search.py",
                "start": {
                  "line": 7,
                  "col": 11,
                  "offset": 127
                },
                "end": {
                  "line": 7,
                  "col": 65,
                  "offset": 181
                }
              },
              "f\"SELECT * FROM products WHERE name LIKE '%{search}%'\""
            ]
          ]
        },
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected",
      "path": "vulns/ssrf/ssrf.py",
      "start": {
        "line": 35,
        "col": 10,
        "offset": 644
      },
      "end": {
        "line": 35,
        "col": 37,
        "offset": 671
      },
      "extra": {
        "metavars": {},
        "message": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead.",
        "metadata": {
          "cwe": [
            "CWE-939: Improper Authorization in Handler for Custom URL Scheme"
          ],
          "owasp": "A01:2017 - Injection",
          "source-rule-url": "https://github.com/PyCQA/bandit/blob/b1411bfb43795d3ffd268bef17a839dee954c2b1/bandit/blacklists/calls.py#L163",
          "bandit-code": "B310",
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": [
            "python"
          ],
          "references": [
            "https://cwe.mitre.org/data/definitions/939.html"
          ],
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Improper Authorization"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected",
          "shortlink": "https://sg.run/dKZZ",
          "semgrep.dev": {
            "rule": {
              "origin": "community",
              "r_id": 9634,
              "rule_id": "8GUj22",
              "rv_id": 946340,
              "url": "https://semgrep.dev/playground/r/w8TKJbO/python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected",
              "version_id": "w8TKJbO"
            }
          }
        },
        "severity": "WARNING",
        "fingerprint": "111472f8d86897ce8531bc277c051acb7e646b47c10ad3960d40ed29832cbc9b25c0aaab0a13c1beb5be605526ed00ddfaa496d321d0b69fb5e6ff5ef85d294a_0",
        "lines": "    with urllib.request.urlopen(url) as f:",
        "is_ignored": false,
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    }
  ],
  "errors": [
    {
      "code": 3,
      "level": "warn",
      "type": "Syntax error",
      "message": "Syntax error at line vulns/sql_injection/sql_injection_login.py:21:\n `flask` was unexpected",
      "path": "vulns/sql_injection/sql_injection_login.py"
    },
    {
      "code": 3,
      "level": "warn",
      "type": "Syntax error",
      "message": "Syntax error at line findings.json:1:\n missing element",
      "path": "findings.json"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Internal matching error",
      "rule_id": "javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm",
      "message": "Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on static/assets/global.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine",
      "path": "static/assets/global.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Internal matching error",
      "rule_id": "javascript.express.web.cors-default-config-express.cors-default-config-express",
      "message": "Internal matching error when running javascript.express.web.cors-default-config-express.cors-default-config-express on static/assets/global.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine",
      "path": "static/assets/global.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Internal matching error",
      "rule_id": "javascript.koa.web.cors-default-config-koa.cors-default-config-koa",
      "message": "Internal matching error when running javascript.koa.web.cors-default-config-koa.cors-default-config-koa on static/assets/global.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine",
      "path": "static/assets/global.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Internal matching error",
      "rule_id": "javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm",
      "message": "Internal matching error when running javascript.crypto-js.cryptojs-weak-algorithm.cryptojs-weak-algorithm on vulns/vulnerable-db.js:\n An error occurred while invoking the Semgrep engine. Please help us fix this by creating an issue at https://github.com/semgrep/semgrep\n\nmetavariable-name:module(s) operator is only supported in the Pro engine",
      "path": "vulns/vulnerable-db.js"
    }
  ],
  "paths": {
    "scanned": [
      ".circleci/config.yml",
      ".github/workflows/semgrep.yml",
      ".gitignore",
      ".vscode/launch.json",
      ".vscode/settings.json",
      "Dockerfile",
      "LICENSE",
      "README.md",
      "_debug.py",
      "api_keys.py",
      "app.py",
      "data/payloads/ & touch hacked.txt & ",
      "db_helper.py",
      "db_models.py",
      "findings.json",
      "middlewares.py",
      "prod.py",
      "requirements.txt",
      "run.prod.sh",
      "run.sh",
      "setup.sh",
      "static/assets/bulma.min.css",
      "static/assets/global.js",
      "static/img/84721189311536093217.jpg",
      "static/pages/about.html",
      "static/uploads/.gitkeep",
      "templates/base.html",
      "templates/components/navbar.html",
      "templates/file_upload.html",
      "templates/home.html",
      "templates/idor/idor_login.html",
      "templates/idor/idor_profile.html",
      "templates/iframe_injection.html",
      "templates/path-traversal.html",
      "templates/sql_injection/login.html",
      "templates/sql_injection/search.html",
      "templates/ssrf.html",
      "templates/xss-reflected.html",
      "templates/xss-stored.html",
      "util.py",
      "vuln-1.py",
      "vuln-main-10.java",
      "vuln-main-2.java",
      "vuln-main-3.java",
      "vuln-main-4.java",
      "vuln-main-7.java",
      "vuln-main-9.java",
      "vuln-main.java",
      "vulns/file_upload/file_upload.py",
      "vulns/idor/idor.py",
      "vulns/iframe_injection/iframe_injection.py",
      "vulns/path_traversal/path_traversal.py",
      "vulns/sql_injection/sql_injection_login.py",
      "vulns/sql_injection/sql_injection_search.py",
      "vulns/ssrf/ssrf.py",
      "vulns/vulnerable-db.js",
      "vulns/vulnerable_auth.py",
      "vulns/xssinjection/xss_reflected.py",
      "vulns/xssinjection/xss_stored.py"
    ]
  },
  "time": {
    "rules": [],
    "rules_parse_time": 4.680233001708984,
    "profiling_times": {
      "config_time": 7.796159029006958,
      "core_time": 6.538320064544678,
      "ignores_time": 0.0011131763458251953,
      "total_time": 14.335935115814209
    },
    "parsing_time": {
      "total_time": 0.0,
      "per_file_time": {
        "mean": 0.0,
        "std_dev": 0.0
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_files": []
    },
    "scanning_time": {
      "total_time": 3.804013967514038,
      "per_file_time": {
        "mean": 0.022508958387657037,
        "std_dev": 0.0033773500496178084
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_files": []
    },
    "matching_time": {
      "total_time": 0.0,
      "per_file_and_rule_time": {
        "mean": 0.0,
        "std_dev": 0.0
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_rules_on_files": []
    },
    "tainting_time": {
      "total_time": 0.0,
      "per_def_and_rule_time": {
        "mean": 0.0,
        "std_dev": 0.0
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_rules_on_defs": []
    },
    "fixpoint_timeouts": [],
    "prefiltering": {
      "project_level_time": 0.0,
      "file_level_time": 0.0,
      "rules_with_project_prefilters_ratio": 0.0,
      "rules_with_file_prefilters_ratio": 0.9868771307149862,
      "rules_selected_ratio": 0.06341941811049362,
      "rules_matched_ratio": 0.06341941811049362
    },
    "targets": [],
    "total_bytes": 0,
    "max_memory_bytes": 8304199808
  },
  "engine_requested": "OSS",
  "interfile_languages_used": [],
  "skipped_rules": []
}
